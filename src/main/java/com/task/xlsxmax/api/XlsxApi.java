/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.task.xlsxmax.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-02-23T16:52:29.646541300+03:00[Europe/Moscow]")
@Validated
@Tag(name = "Xlsx", description = "the Xlsx API")
public interface XlsxApi {

    /**
     * POST /api/xlsx/find-nth-max : Найти N-й максимум
     * Принимает файл XLSX и число N, возвращает N-е максимальное число из файла.
     *
     * @param file Файл XLSX (optional)
     * @param n Позиция максимального числа (optional)
     * @return Успешный ответ (status code 200)
     *         or  (status code 4XX)
     *         or  (status code 5XX)
     */
    @Operation(
        operationId = "findNthMax",
        summary = "Найти N-й максимум",
        tags = { "Xlsx" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Успешный ответ", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Integer.class))
            }),
            @ApiResponse(responseCode = "4XX", description = ""),
            @ApiResponse(responseCode = "5XX", description = "")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/xlsx/find-nth-max",
        produces = { "application/json" },
        consumes = { "multipart/form-data" }
    )
    ResponseEntity<Integer> findNthMax(
        @Parameter(name = "file", description = "Файл XLSX") @RequestPart(value = "file", required = false) MultipartFile file,
        @Parameter(name = "n", description = "Позиция максимального числа") @Valid @RequestParam(value = "n", required = false) Integer n
    );

}
